{"ast":null,"code":"var _jsxFileName = \"/Users/wonderland/Documents/Code/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios'; // make a post request to retrieve a token from the api\n// when you have handled the token, navigate to the BubblePage route\n\nconst Login = props => {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  const handleChanges = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const loginSubmit = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setTimeout(() => {\n      axiosWithAuth().post('login', credentials).then(res => {\n        console.log('login success! res:', res);\n        localStorage.setItem('token', res.data.payload);\n        props.history.push('/protected');\n        setIsLoading(false);\n        setError(false);\n      }).catch(err => {\n        console.error('login failure! err:', err.message);\n        localStorage.removeItem('authToken');\n        setIsLoading(false);\n        setError(true);\n      });\n    }, 2000);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"login-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"form\", {\n    onSubmit: loginSubmit,\n    className: \"input-cont log\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Username\"), React.createElement(\"input\", {\n    name: \"username\",\n    type: \"text\",\n    value: credentials.username,\n    onChange: handleChanges,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    name: \"password\",\n    type: \"password\",\n    value: credentials.password,\n    onChange: handleChanges,\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), isLoading ? React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"LOADING\") : React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"SIGN IN\"), error ? React.createElement(\"p\", {\n    className: \"error-login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Wrong credentials, Try again.\") : null)));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/wonderland/Documents/Code/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js"],"names":["React","useState","axios","Login","props","credentials","setCredentials","username","password","isLoading","setIsLoading","error","setError","handleChanges","e","target","name","value","loginSubmit","preventDefault","setTimeout","axiosWithAuth","post","then","res","console","log","localStorage","setItem","data","payload","history","push","catch","err","message","removeItem"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n  // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n\nconst Login = props => {\n    const [credentials, setCredentials] = useState(\n        {username:'', password: ''}\n    );\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n   \n    const handleChanges = e => {\n        setCredentials({...credentials, [e.target.name]: e.target.value});\n    };\n\n    const loginSubmit = e => {\n        e.preventDefault();\n        setIsLoading(true);\n        setTimeout(() => {\n            axiosWithAuth()\n            .post('login', credentials)\n            .then(res => {\n                console.log('login success! res:', res);\n                localStorage.setItem('token', res.data.payload);\n                props.history.push('/protected');\n                setIsLoading(false);\n                setError(false);\n            })\n            .catch(err => {\n                console.error('login failure! err:', err.message);\n                localStorage.removeItem('authToken');\n                setIsLoading(false);\n                setError(true);\n            })\n        }, 2000)\n    };\n\n    return (\n        <div>\n           \n             <div className='login-form'>\n                <h1 className='header'>\n                    Sign in\n                </h1>\n                <form onSubmit={loginSubmit} className='input-cont log'>\n                    <label htmlFor='username'>Username</label>\n                    <input\n                    name='username'\n                    type='text'\n                    value={credentials.username}\n                    onChange={handleChanges}\n                    className='input'\n                    />\n    \n                    <label htmlFor='password'>Password</label>\n                    <input\n                    name='password'\n                    type='password'\n                    value={credentials.password}\n                    onChange={handleChanges}\n                    className='input'\n                    />\n                      {isLoading ? \n                      <button className='btn'>LOADING</button>\n                      :<button className='btn'>SIGN IN</button>}\n                      {error ? <p className='error-login'>Wrong credentials, Try again.</p> : null}\n                </form>\n            </div>\n            \n        </div>\n    );\n};\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}